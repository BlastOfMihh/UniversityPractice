     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, printf, scanf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                  import scanf msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    10                                  import printf msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    11                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    12                                  
    13                                  ; our data is declared here (the variables needed by our program)
    14                                  segment data use32 class=data
    15                                      ; ...
    16                                      
    17 00000000 00000000                a dd 0;19
    18 00000004 00000000                b dd 0;17
    19 00000008 3C25643E2F3C25643E-     message db "<%d>/<%d>=<%d>", 0
    19 00000011 3D3C25643E00       
    20 00000017 256400                  format db "%d", 0
    21                                  
    22                                      
    23                                  ; our code starts here
    24                                  segment code use32 class=code
    25                                      start:
    26                                          ; ...
    27                                          
    28 00000000 68[00000000]                    push dword a
    29 00000005 68[17000000]                    push dword format
    30 0000000A FF15[00000000]                  call [scanf]
    31 00000010 83C408                          add esp, 4 * 2
    32                                          
    33 00000013 68[04000000]                    push dword b
    34 00000018 68[17000000]                    push dword format
    35 0000001D FF15[00000000]                  call [scanf]
    36 00000023 83C408                          add esp, 4 * 2
    37                                          
    38                                          
    39                                          
    40 00000026 6A09                            push dword 9
    41 00000028 6A0A                            push dword 10
    42 0000002A 6A13                            push dword 19
    43 0000002C 68[08000000]                    push dword message
    44 00000031 FF15[00000000]                  call [printf]
    45 00000037 83C410                          add esp, 4* 4
    46                                              
    47                                          ; exit(0)
    48 0000003A 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    49 0000003C FF15[00000000]                  call    [exit]       ; call exit to terminate the program
