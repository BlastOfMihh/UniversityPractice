     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, printf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                  import printf msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    10                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    11                                  
    12                                  ; our data is declared here (the variables needed by our program)
    13                                  segment data use32 class=data
    14                                      ; ...
    15                                  
    16                                  k equ 10
    17                                  
    18 00000000 0B000000                b dd 11
    19 00000004 78000000                a dd 120
    20 00000008 255800                  format db "%X",0
    21                                  
    22                                      
    23                                  ; our code starts here
    24                                  segment code use32 class=code
    25                                      start:
    26                                          ; ...
    27 00000000 B800000000                      mov eax,0
    28 00000005 66A1[04000000]                  mov ax, [a]
    29 0000000B 662B05[00000000]                sub ax, [b]
    30 00000012 66BB0A00                        mov bx, k
    31 00000016 66F7E3                          mul word bx 
    32 00000019 50                              push dword eax 
    33 0000001A 68[08000000]                    push dword format
    34 0000001F FF15[00000000]                  call [printf]
    35 00000025 83C408                          add esp, 4 * 2
    36                                          
    37                                          ; exit(0)
    38 00000028 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    39 0000002A FF15[00000000]                  call    [exit]       ; call exit to terminate the program
