     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 00                          a db 0
    15 00000001 00                          b db 0
    16 00000002 00                          c db 0
    17 00000003 00                          d db 0
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; ...
    22                                          
    23 00000000 A0[00000000]                    mov AL, byte [a]
    24 00000005 0205[00000000]                  add AL, [a]
    25 0000000B 80D400                          adc AH, 0
    26 0000000E 8A1D[02000000]                  mov BL, [c]
    27 00000014 021D[01000000]                  add BL, [b]
    28 0000001A 80D700                          adc BH, 0
    29 0000001D 021D[03000000]                  add BL, [d]
    30 00000023 80D700                          adc BH, 0
    31 00000026 28D8                            sub AL, BL
    32 00000028 80DC00                          sbb AH, 0
    33                                          
    34                                          ; exit(0)
    35 0000002B 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    36 0000002D FF15[00000000]                  call    [exit]       ; call exit to terminate the program
