     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, printf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    
     9                                  import printf msvcrt.dll
    10                                  
    11                                  
    12                                  ; our data is declared here (the variables needed by our program)
    13                                  segment data use32 class=data
    14                                  
    15 00000000 01000000                pwr dd 1
    16 00000004 68657265204920616D      factorial_str db "here I am"
    17 0000000D <res 00000004>          ret_adrs resd 1
    18 00000011 <res 00000004>          exp resd 1
    19                                      
    20                                  ; our code starts here
    21                                  segment code use32 class=code
    22                                      
    23                                      factorial:
    24 00000000 8F05[0D000000]                  pop dword [ret_adrs]
    25 00000006 8F05[11000000]                  pop dword [exp]
    26 0000000C 8B0D[11000000]                  mov ecx, [exp]
    27 00000012 B801000000                      mov eax, 1
    28                                          .loop:
    29 00000017 66F7E1                              mul cx 
    30 0000001A E2FB                            loop .loop 
    31 0000001C FF25[0D000000]                  jmp [ret_adrs]
    32                                          
    33                                      
    34                                      start:
    35                                          ; ...
    36                                          
    37 00000022 6A05                            push dword 5
    38 00000024 E8D7FFFFFF                      call factorial
    39                                          
    40                                          
    41                                          ; exit(0)
    42 00000029 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    43 0000002B FF15[00000000]                  call    [exit]       ; call exit to terminate the program
